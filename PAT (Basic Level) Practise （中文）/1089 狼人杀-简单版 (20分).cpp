/*

1089 狼人杀-简单版 (20分)
以下文字摘自《灵机一动·好玩的数学》：“狼人杀”游戏分为狼人、好人两大阵营。在一局“狼人杀”游戏中，1 号玩家说：“2 号是狼人”，2 号玩家说：“3 号是好人”，3 号玩家说：“4 号是狼人”，4 号玩家说：“5 号是好人”，5 号玩家说：“4 号是好人”。已知这 5 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。扮演狼人角色的是哪两号玩家？

本题是这个问题的升级版：已知 N 名玩家中有 2 人扮演狼人角色，有 2 人说的不是实话，有狼人撒谎但并不是所有狼人都在撒谎。要求你找出扮演狼人角色的是哪几号玩家？

输入格式：
输入在第一行中给出一个正整数 N（5≤N≤100）。随后 N 行，第 i 行给出第 i 号玩家说的话（1≤i≤N），即一个玩家编号，用正号表示好人，负号表示狼人。

输出格式：
如果有解，在一行中按递增顺序输出 2 个狼人的编号，其间以空格分隔，行首尾不得有多余空格。如果解不唯一，则输出最小序列解 —— 即对于两个序列 A=a[1],...,a[M] 和 B=b[1],...,b[M]，若存在 0≤k<M 使得 a[i]=b[i] （i≤k），且 a[k+1]<b[k+1]，则称序列 A 小于序列 B。若无解则输出 No Solution。

输入样例 1：
5
-2
+3
-4
+5
+4
   
输出样例 1：
1 4
 
输入样例 2：
6
+6
+3
+1
-5
-2
+4  
    
输出样例 2（解不唯一）：
1 5

输入样例 3：
5
-2
-3
-4
-5
-1
  
输出样例 3：
No Solution

*/

/*

解题思路：我们要把自己当做是上帝视角,然后假设两个人是狼人,这种情况下,再和说话的人去比较,比如假设a狼人,b说a不是狼人,那么b就说谎了。
每种情况下，就能知道哪些人说谎，再比较题目条件,一个狼人说谎，一个好人说谎,就可以确定假设的狼人是不是真的狼人。
PS:问题的关键在于：假设A是狼人是事实，那么有人说他不是狼人就是在说谎~  


*/

#include<iostream>
#include<vector>
#include<cmath>
using namespace std;

int main(){
    int n;
    cin>>n;
    vector<int> v(n+1);   //为了方便编号是1-n,所以采用n+1这样的分配;
    for(int i=1;i<n+1;i++){
        cin>>v[i];
    }

    for(int i=1;i<n+1;i++){
        for(int j=i+1;j<n+1;j++){
            //res用来保存最后的狼人的结果,flag用来标记狼人和好人,-1表示狼人,1表示好人;
            vector<int> res,flag(n+1,1); 
            flag[i]=flag[j]=-1; //假设i和j是狼人
            for(int k=1;k<n+1;k++){
                if(v[k]*flag[abs(v[k])]<0){
                    res.push_back(k);
                }
            }
            if(res.size()==2&&flag[res[0]]+flag[res[1]]==0){ //两个说谎者;一个好人一个狼人;
                cout<<i<<" "<<j<<endl;
                return 0;
            }
        }
    }
    cout<<"No Solution"<<endl;

    return 0;
}